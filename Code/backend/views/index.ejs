<!DOCTYPE html>
<html>
  <head>
    <title>Dashboard</title>
    <link rel="stylesheet" href="./stylesheets/styles.css" />
  </head>
  <body>
    <!-- TEMPLATE -->
    <template id="userTemplate">
      <tr>
        <td class="currentURL"></td>
        <td class="refferURL"></td>
        <td class="timestamp"></td>
        <td class="utm_m"></td>
        <td class="utm_s"></td>
        <td class="userAgent"></td>
        <td class="lsn"></td>
      </tr>
    </template>
    <!-- END TEMPLATE -->
    <div id="wrapper">
      <h1 class="text-xl">Dashboard</h1>
      <div id="counter">
        The current count is <b><span id="userCount">1</span></b>
        <hr>
        <a href="/download">Export to Excel</a>

      </div>
      <div id="list">
        <table>
          <thead>
            <tr>
              <th>Current url</th>
              <th>Reffer url</th>
              <th>Timestamp</th>
              <th>Utm medium</th>
              <th>Utm source</th>
              <th>User agent</th>
              <th>Lead source name</th>
            </tr>
          </thead>
          <tbody id="tableBody">
            <% data.forEach(function(entry) { %>
              <tr>
                <td class="currentURL"><%= entry.currentURL %></td>
                <td class="refferURL"><%= entry.referrerURL || 'null' %></td>
                <td class="timestamp"><%= entry.timestamp %></td>
                <td class="utm_m"><%= entry.utmMedium || 'null' %></td>
                <td class="utm_s"><%= entry.utmSource || 'null' %></td>
                <td class="userAgent"><%= entry.userAgent %></td>
                <td class="lsn"><%= entry.leadSourceName || 'null' %></td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    </div>
  </body>
  <script>
    // Connect to socket
    const socket = new WebSocket("ws://localhost:8082", "dashboard");
    // Add message
    socket.onmessage = (event) => {
      try {
        const data = JSON.parse(event.data);

        // Set count of users, regardless of the type of the message
        updateUserCount(data.currentCount);

        if (data.msg && data.msg.type !== undefined && data.msg.type === "clientJoin") {
          addUser(
            data.msg.currentURL,
            data.msg.referrerURL,
            data.msg.timestamp,
            data.msg.utmMedium,
            data.msg.utmSource,
            data.msg.userAgent,
            data.msg.leadSourceName,
          );
        }
      } catch (error) {
        console.error("Error processing message:", error);
      }
    };

    // Updates the DOM
    function updateUserCount(newCount) {
      const userCountElement = document.getElementById("userCount");
      userCountElement.innerText = newCount || "no data";
    }

    // Updates the DOM and refreshes the list in real-time
    function addUser(
      currentURL,
      referrerURL,
      timestamp,
      utmMedium,
      utmSource,
      userAgent,
      leadSourceName
    ) {
      const rowTemplate = document.getElementById("userTemplate").content;
      const tableBody = document.getElementById("tableBody");

      // Clone and update the DOM
      const newRow = document.importNode(rowTemplate, true);
      newRow.querySelector(".currentURL").textContent = currentURL;
      newRow.querySelector(".refferURL").textContent = referrerURL || 'null';
      newRow.querySelector(".timestamp").textContent = timestamp;
      newRow.querySelector(".utm_m").textContent = utmMedium || "null";
      newRow.querySelector(".utm_s").textContent = utmSource || "null";
      newRow.querySelector(".userAgent").textContent = userAgent;
      newRow.querySelector(".lsn").textContent = leadSourceName || "null";

      // Add to the DOM
      tableBody.insertBefore(newRow, tableBody.firstChild);
    }
  </script>
</html>
